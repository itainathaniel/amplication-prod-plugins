import { AstNode } from "../core/AstNode";
import { Writer } from "../core/Writer";
import { Annotation } from "./Annotation";
import { Type } from "./Type";
export declare namespace Parameter {
    interface Args {
        name: string;
        type: Type;
        docs?: string;
        initializer?: string;
        annotations?: Annotation[];
        splitAnnotations?: boolean;
    }
}
export declare class Parameter extends AstNode {
    readonly name: string;
    readonly docs: string | undefined;
    readonly initializer: string | undefined;
    readonly annotations?: Annotation[];
    readonly splitAnnotations?: boolean;
    private type;
    constructor({ name, type, docs, initializer, annotations, splitAnnotations, }: Parameter.Args);
    write(writer: Writer): void;
}
