"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Enum = void 0;
const Annotation_1 = require("./Annotation");
const ClassReference_1 = require("./ClassReference");
const AstNode_1 = require("../core/AstNode");
const System_1 = require("./dependencies/System");
class Enum extends AstNode_1.AstNode {
    name;
    namespace;
    access;
    reference;
    annotations;
    fields = [];
    constructor({ name, namespace, access, annotations }) {
        super();
        this.name = name;
        this.namespace = namespace;
        this.access = access;
        this.annotations = annotations ?? [];
        this.reference = new ClassReference_1.ClassReference({
            name: this.name,
            namespace: this.namespace,
        });
    }
    addMember(field) {
        this.fields.push({
            name: field.name,
            value: new Annotation_1.Annotation({
                reference: System_1.ENUM_MEMBER,
                argument: `Value = "${field.value}"`,
            }),
        });
    }
    write(writer) {
        writer.writeLine(`namespace ${this.namespace};`);
        writer.newLine();
        if (this.annotations.length > 0) {
            writer.write("[");
            for (const annotation of this.annotations) {
                annotation.write(writer);
            }
            writer.writeLine("]");
        }
        writer.write(`${this.access} `);
        writer.write("enum ");
        writer.writeLine(`${this.name}`);
        writer.writeLine("{");
        writer.indent();
        this.fields.forEach((field, index) => {
            writer.write("[");
            field.value.write(writer);
            writer.writeLine("]");
            writer.write(field.name);
            if (index < this.fields.length - 1) {
                writer.writeLine(",");
                writer.newLine();
            }
        });
        writer.writeNewLineIfLastLineNot();
        writer.dedent();
        writer.writeLine("}");
    }
}
exports.Enum = Enum;
//# sourceMappingURL=Enum.js.map