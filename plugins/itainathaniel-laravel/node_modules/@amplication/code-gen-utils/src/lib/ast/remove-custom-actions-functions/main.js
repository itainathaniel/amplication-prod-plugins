"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeObjectPropertyByName = exports.removeObjectMethodByName = exports.removeCallExpressionStatementByName = void 0;
const code_gen_types_1 = require("@amplication/code-gen-types");
const recast_1 = require("recast");
function removeCallExpressionStatementByName(ast, action) {
    (0, recast_1.visit)(ast, {
        visitCallExpression(path) {
            const expression = path.value;
            const { actionType, name } = action;
            const argument = expression.arguments.find((a) => a.type === "StringLiteral");
            if (!argument)
                return this.traverse(path);
            if (actionType === code_gen_types_1.EnumModuleActionType.Create &&
                argument.value.includes("POST")) {
                path.prune();
            }
            if (actionType === code_gen_types_1.EnumModuleActionType.Find &&
                argument.value === `GET /${name}`) {
                path.prune();
            }
            if (actionType === code_gen_types_1.EnumModuleActionType.Read &&
                argument.value.includes(":id")) {
                path.prune();
            }
            this.traverse(path);
        },
    });
}
exports.removeCallExpressionStatementByName = removeCallExpressionStatementByName;
function removeObjectMethodByName(ast, actionName) {
    (0, recast_1.visit)(ast, {
        visitObjectMethod(path) {
            const keyName = path.value.key.name;
            if (keyName === actionName) {
                path.prune();
            }
            this.traverse(path);
        },
    });
}
exports.removeObjectMethodByName = removeObjectMethodByName;
function removeObjectPropertyByName(ast, actionName) {
    (0, recast_1.visit)(ast, {
        visitObjectProperty(path) {
            const keyName = path.value.key.name;
            if (keyName === actionName) {
                path.prune();
            }
            this.traverse(path);
        },
    });
}
exports.removeObjectPropertyByName = removeObjectPropertyByName;
//# sourceMappingURL=main.js.map