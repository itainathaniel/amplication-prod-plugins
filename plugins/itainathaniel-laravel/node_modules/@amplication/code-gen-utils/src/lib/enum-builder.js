"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumBuilder = void 0;
const recast_1 = require("recast");
const { builders } = recast_1.types;
class EnumBuilder {
    enumName;
    ast;
    constructor(enumName) {
        this.enumName = enumName;
        this.ast = builders.tsEnumDeclaration(builders.identifier(enumName), []);
    }
    createMember(key, value) {
        this.ast.members.push(builders.tsEnumMember(builders.identifier(key), value ? builders.stringLiteral(value) : undefined));
        return this;
    }
    readMember(key) {
        return this.ast.members.find((member) => member.id.name === key);
    }
    updateMember(key, value) {
        const member = this.ast.members.find((member) => member.id.name === key);
        if (!member) {
            throw new Error(`Member ${key} not found`);
        }
        member.initializer = builders.stringLiteral(value);
        return this;
    }
}
exports.EnumBuilder = EnumBuilder;
//# sourceMappingURL=enum-builder.js.map