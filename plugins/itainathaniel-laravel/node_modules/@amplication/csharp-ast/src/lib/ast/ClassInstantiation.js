"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassInstantiation = void 0;
const AstNode_1 = require("../core/AstNode");
class ClassInstantiation extends AstNode_1.AstNode {
    classReference;
    arguments_;
    constructor({ classReference, arguments_ }) {
        super();
        this.classReference = classReference;
        this.arguments_ = arguments_;
    }
    write(writer) {
        writer.write(`new ${this.classReference.name}(`);
        writer.newLine();
        writer.indent();
        this.arguments_.forEach((argument, idx) => {
            if (isNamedArgument(argument)) {
                writer.write(`${argument.name}: `);
                argument.assignment.write(writer);
            }
            else {
                argument.write(writer);
            }
            if (idx < this.arguments_.length - 1) {
                writer.write(", ");
            }
        });
        writer.dedent();
        writer.writeLine(");");
    }
}
exports.ClassInstantiation = ClassInstantiation;
function isNamedArgument(argument) {
    return argument?.name != null;
}
//# sourceMappingURL=ClassInstantiation.js.map