import { CodeBlock } from "./CodeBlock";
import { AstNode } from "../core/AstNode";
import { Writer } from "../core/Writer";
import { Method } from "./Method";
import { Parameter } from "./Parameter";
export declare namespace MethodInvocation {
    interface Args {
        method: Method;
        arguments_: Map<Parameter, CodeBlock>;
        on?: CodeBlock;
    }
}
export declare class MethodInvocation extends AstNode {
    private arguments;
    private method;
    private on;
    constructor({ method, arguments_, on }: MethodInvocation.Args);
    write(writer: Writer): void;
}
