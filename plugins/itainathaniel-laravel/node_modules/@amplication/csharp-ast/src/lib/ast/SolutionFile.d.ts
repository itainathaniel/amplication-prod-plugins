import { AstNode } from "../core/AstNode";
import { Writer } from "../core/Writer";
export declare namespace Solution {
    interface Project {
        name: string;
        path: string;
        typeGUID: string;
        projectGUID: string;
    }
    interface SolutionConfiguration {
        name: string;
        platform: string;
    }
    interface ProjectConfiguration {
        projectGUID: string;
        activeCfg: string;
        build: boolean;
    }
}
export declare class Solution extends AstNode {
    private projects;
    private solutionConfigurations;
    private projectConfigurations;
    private dependencies;
    private solutionVersion;
    private visualStudioVersion;
    private minimumVisualStudioVersion;
    constructor();
    /**
     * Parses an existing solution file and loads metadata, projects, configurations, and dependencies.
     */
    parse(content: string): void;
    /**
     * Adds a new project to the solution.
     */
    addProject(name: string, path: string, typeGUID: string, projectGUID: string, dependencies?: string[]): string;
    /**
     * Removes a project from the solution.
     */
    removeProject(name: string): void;
    /**
     * Sorts projects while respecting dependencies.
     */
    private sortProjects;
    /**
     * Generates the updated `.sln` file content.
     */
    write(writer: Writer): void;
}
