"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortOrder = exports.Role = exports.QueryMode = exports.EnumWorkspaceMemberType = exports.EnumUserActionType = exports.EnumUserActionStatus = exports.EnumTimeGroup = exports.EnumSubscriptionStatus = exports.EnumSubscriptionPlan = exports.EnumSchemaNames = exports.EnumResourceType = exports.EnumPreviewAccountType = exports.EnumPendingChangeOriginType = exports.EnumPendingChangeAction = exports.EnumPackageStatus = exports.EnumModuleDtoType = exports.EnumModuleDtoPropertyType = exports.EnumModuleActionType = exports.EnumModuleActionRestVerb = exports.EnumModuleActionRestInputSource = exports.EnumModuleActionGqlOperation = exports.EnumMessagePatternConnectionOptions = exports.EnumGitProvider = exports.EnumGitOrganizationType = exports.EnumEntityPermissionType = exports.EnumEntityAction = exports.EnumDataType = exports.EnumCommitStrategy = exports.EnumCodeGenerator = exports.EnumBuildStatus = exports.EnumBlockType = exports.EnumAuthProviderType = exports.EnumAssistantMessageType = exports.EnumAssistantMessageRole = exports.EnumAssistantFunctions = exports.EnumActionStepStatus = exports.EnumActionLogLevel = exports.CodeGeneratorVersionStrategy = void 0;
var CodeGeneratorVersionStrategy;
(function (CodeGeneratorVersionStrategy) {
    CodeGeneratorVersionStrategy["LatestMajor"] = "LatestMajor";
    CodeGeneratorVersionStrategy["LatestMinor"] = "LatestMinor";
    CodeGeneratorVersionStrategy["Specific"] = "Specific";
})(CodeGeneratorVersionStrategy || (exports.CodeGeneratorVersionStrategy = CodeGeneratorVersionStrategy = {}));
var EnumActionLogLevel;
(function (EnumActionLogLevel) {
    EnumActionLogLevel["Debug"] = "Debug";
    EnumActionLogLevel["Error"] = "Error";
    EnumActionLogLevel["Info"] = "Info";
    EnumActionLogLevel["Warning"] = "Warning";
})(EnumActionLogLevel || (exports.EnumActionLogLevel = EnumActionLogLevel = {}));
var EnumActionStepStatus;
(function (EnumActionStepStatus) {
    EnumActionStepStatus["Failed"] = "Failed";
    EnumActionStepStatus["Running"] = "Running";
    EnumActionStepStatus["Success"] = "Success";
    EnumActionStepStatus["Waiting"] = "Waiting";
})(EnumActionStepStatus || (exports.EnumActionStepStatus = EnumActionStepStatus = {}));
var EnumAssistantFunctions;
(function (EnumAssistantFunctions) {
    EnumAssistantFunctions["CommitProjectPendingChanges"] = "CommitProjectPendingChanges";
    EnumAssistantFunctions["CreateEntities"] = "CreateEntities";
    EnumAssistantFunctions["CreateEntityFields"] = "CreateEntityFields";
    EnumAssistantFunctions["CreateModule"] = "CreateModule";
    EnumAssistantFunctions["CreateModuleAction"] = "CreateModuleAction";
    EnumAssistantFunctions["CreateModuleDto"] = "CreateModuleDto";
    EnumAssistantFunctions["CreateModuleEnum"] = "CreateModuleEnum";
    EnumAssistantFunctions["CreateProject"] = "CreateProject";
    EnumAssistantFunctions["CreateService"] = "CreateService";
    EnumAssistantFunctions["GetModuleActions"] = "GetModuleActions";
    EnumAssistantFunctions["GetModuleDtosAndEnums"] = "GetModuleDtosAndEnums";
    EnumAssistantFunctions["GetPlugins"] = "GetPlugins";
    EnumAssistantFunctions["GetProjectPendingChanges"] = "GetProjectPendingChanges";
    EnumAssistantFunctions["GetProjectServices"] = "GetProjectServices";
    EnumAssistantFunctions["GetService"] = "GetService";
    EnumAssistantFunctions["GetServiceEntities"] = "GetServiceEntities";
    EnumAssistantFunctions["GetServiceModules"] = "GetServiceModules";
    EnumAssistantFunctions["InstallPlugins"] = "InstallPlugins";
})(EnumAssistantFunctions || (exports.EnumAssistantFunctions = EnumAssistantFunctions = {}));
var EnumAssistantMessageRole;
(function (EnumAssistantMessageRole) {
    EnumAssistantMessageRole["Assistant"] = "Assistant";
    EnumAssistantMessageRole["User"] = "User";
})(EnumAssistantMessageRole || (exports.EnumAssistantMessageRole = EnumAssistantMessageRole = {}));
var EnumAssistantMessageType;
(function (EnumAssistantMessageType) {
    EnumAssistantMessageType["Default"] = "Default";
    EnumAssistantMessageType["Onboarding"] = "Onboarding";
})(EnumAssistantMessageType || (exports.EnumAssistantMessageType = EnumAssistantMessageType = {}));
var EnumAuthProviderType;
(function (EnumAuthProviderType) {
    EnumAuthProviderType["Auth0"] = "Auth0";
    EnumAuthProviderType["Http"] = "Http";
    EnumAuthProviderType["Jwt"] = "Jwt";
})(EnumAuthProviderType || (exports.EnumAuthProviderType = EnumAuthProviderType = {}));
var EnumBlockType;
(function (EnumBlockType) {
    EnumBlockType["Module"] = "Module";
    EnumBlockType["ModuleAction"] = "ModuleAction";
    EnumBlockType["ModuleDto"] = "ModuleDto";
    EnumBlockType["Package"] = "Package";
    EnumBlockType["PluginInstallation"] = "PluginInstallation";
    EnumBlockType["PluginOrder"] = "PluginOrder";
    EnumBlockType["PrivatePlugin"] = "PrivatePlugin";
    EnumBlockType["ProjectConfigurationSettings"] = "ProjectConfigurationSettings";
    EnumBlockType["ServiceSettings"] = "ServiceSettings";
    EnumBlockType["ServiceTopics"] = "ServiceTopics";
    EnumBlockType["Topic"] = "Topic";
})(EnumBlockType || (exports.EnumBlockType = EnumBlockType = {}));
var EnumBuildStatus;
(function (EnumBuildStatus) {
    EnumBuildStatus["Completed"] = "Completed";
    EnumBuildStatus["Failed"] = "Failed";
    EnumBuildStatus["Invalid"] = "Invalid";
    EnumBuildStatus["Running"] = "Running";
})(EnumBuildStatus || (exports.EnumBuildStatus = EnumBuildStatus = {}));
var EnumCodeGenerator;
(function (EnumCodeGenerator) {
    EnumCodeGenerator["DotNet"] = "DotNet";
    EnumCodeGenerator["NodeJs"] = "NodeJs";
})(EnumCodeGenerator || (exports.EnumCodeGenerator = EnumCodeGenerator = {}));
var EnumCommitStrategy;
(function (EnumCommitStrategy) {
    EnumCommitStrategy["All"] = "All";
    EnumCommitStrategy["AllWithPendingChanges"] = "AllWithPendingChanges";
    EnumCommitStrategy["Specific"] = "Specific";
})(EnumCommitStrategy || (exports.EnumCommitStrategy = EnumCommitStrategy = {}));
var EnumDataType;
(function (EnumDataType) {
    EnumDataType["Boolean"] = "Boolean";
    EnumDataType["CreatedAt"] = "CreatedAt";
    EnumDataType["DateTime"] = "DateTime";
    EnumDataType["DecimalNumber"] = "DecimalNumber";
    EnumDataType["Email"] = "Email";
    EnumDataType["File"] = "File";
    EnumDataType["GeographicLocation"] = "GeographicLocation";
    EnumDataType["Id"] = "Id";
    EnumDataType["Json"] = "Json";
    EnumDataType["Lookup"] = "Lookup";
    EnumDataType["MultiLineText"] = "MultiLineText";
    EnumDataType["MultiSelectOptionSet"] = "MultiSelectOptionSet";
    EnumDataType["OptionSet"] = "OptionSet";
    EnumDataType["Password"] = "Password";
    EnumDataType["Roles"] = "Roles";
    EnumDataType["SingleLineText"] = "SingleLineText";
    EnumDataType["UpdatedAt"] = "UpdatedAt";
    EnumDataType["Username"] = "Username";
    EnumDataType["WholeNumber"] = "WholeNumber";
})(EnumDataType || (exports.EnumDataType = EnumDataType = {}));
var EnumEntityAction;
(function (EnumEntityAction) {
    EnumEntityAction["Create"] = "Create";
    EnumEntityAction["Delete"] = "Delete";
    EnumEntityAction["Search"] = "Search";
    EnumEntityAction["Update"] = "Update";
    EnumEntityAction["View"] = "View";
})(EnumEntityAction || (exports.EnumEntityAction = EnumEntityAction = {}));
var EnumEntityPermissionType;
(function (EnumEntityPermissionType) {
    EnumEntityPermissionType["AllRoles"] = "AllRoles";
    EnumEntityPermissionType["Disabled"] = "Disabled";
    EnumEntityPermissionType["Granular"] = "Granular";
    EnumEntityPermissionType["Public"] = "Public";
})(EnumEntityPermissionType || (exports.EnumEntityPermissionType = EnumEntityPermissionType = {}));
var EnumGitOrganizationType;
(function (EnumGitOrganizationType) {
    EnumGitOrganizationType["Organization"] = "Organization";
    EnumGitOrganizationType["User"] = "User";
})(EnumGitOrganizationType || (exports.EnumGitOrganizationType = EnumGitOrganizationType = {}));
var EnumGitProvider;
(function (EnumGitProvider) {
    EnumGitProvider["AwsCodeCommit"] = "AwsCodeCommit";
    EnumGitProvider["Bitbucket"] = "Bitbucket";
    EnumGitProvider["GitLab"] = "GitLab";
    EnumGitProvider["Github"] = "Github";
})(EnumGitProvider || (exports.EnumGitProvider = EnumGitProvider = {}));
var EnumMessagePatternConnectionOptions;
(function (EnumMessagePatternConnectionOptions) {
    EnumMessagePatternConnectionOptions["None"] = "None";
    EnumMessagePatternConnectionOptions["Receive"] = "Receive";
    EnumMessagePatternConnectionOptions["Send"] = "Send";
})(EnumMessagePatternConnectionOptions || (exports.EnumMessagePatternConnectionOptions = EnumMessagePatternConnectionOptions = {}));
var EnumModuleActionGqlOperation;
(function (EnumModuleActionGqlOperation) {
    EnumModuleActionGqlOperation["Mutation"] = "Mutation";
    EnumModuleActionGqlOperation["Query"] = "Query";
})(EnumModuleActionGqlOperation || (exports.EnumModuleActionGqlOperation = EnumModuleActionGqlOperation = {}));
var EnumModuleActionRestInputSource;
(function (EnumModuleActionRestInputSource) {
    EnumModuleActionRestInputSource["Body"] = "Body";
    EnumModuleActionRestInputSource["Params"] = "Params";
    EnumModuleActionRestInputSource["Query"] = "Query";
    EnumModuleActionRestInputSource["Split"] = "Split";
})(EnumModuleActionRestInputSource || (exports.EnumModuleActionRestInputSource = EnumModuleActionRestInputSource = {}));
var EnumModuleActionRestVerb;
(function (EnumModuleActionRestVerb) {
    EnumModuleActionRestVerb["Delete"] = "Delete";
    EnumModuleActionRestVerb["Get"] = "Get";
    EnumModuleActionRestVerb["Head"] = "Head";
    EnumModuleActionRestVerb["Options"] = "Options";
    EnumModuleActionRestVerb["Patch"] = "Patch";
    EnumModuleActionRestVerb["Post"] = "Post";
    EnumModuleActionRestVerb["Put"] = "Put";
    EnumModuleActionRestVerb["Trace"] = "Trace";
})(EnumModuleActionRestVerb || (exports.EnumModuleActionRestVerb = EnumModuleActionRestVerb = {}));
var EnumModuleActionType;
(function (EnumModuleActionType) {
    EnumModuleActionType["ChildrenConnect"] = "ChildrenConnect";
    EnumModuleActionType["ChildrenDisconnect"] = "ChildrenDisconnect";
    EnumModuleActionType["ChildrenFind"] = "ChildrenFind";
    EnumModuleActionType["ChildrenUpdate"] = "ChildrenUpdate";
    EnumModuleActionType["Create"] = "Create";
    EnumModuleActionType["Custom"] = "Custom";
    EnumModuleActionType["Delete"] = "Delete";
    EnumModuleActionType["Find"] = "Find";
    EnumModuleActionType["Meta"] = "Meta";
    EnumModuleActionType["ParentGet"] = "ParentGet";
    EnumModuleActionType["Read"] = "Read";
    EnumModuleActionType["Update"] = "Update";
})(EnumModuleActionType || (exports.EnumModuleActionType = EnumModuleActionType = {}));
var EnumModuleDtoPropertyType;
(function (EnumModuleDtoPropertyType) {
    EnumModuleDtoPropertyType["Boolean"] = "Boolean";
    EnumModuleDtoPropertyType["DateTime"] = "DateTime";
    EnumModuleDtoPropertyType["Dto"] = "Dto";
    EnumModuleDtoPropertyType["Enum"] = "Enum";
    EnumModuleDtoPropertyType["Float"] = "Float";
    EnumModuleDtoPropertyType["Integer"] = "Integer";
    EnumModuleDtoPropertyType["Json"] = "Json";
    EnumModuleDtoPropertyType["Null"] = "Null";
    EnumModuleDtoPropertyType["String"] = "String";
    EnumModuleDtoPropertyType["Undefined"] = "Undefined";
})(EnumModuleDtoPropertyType || (exports.EnumModuleDtoPropertyType = EnumModuleDtoPropertyType = {}));
var EnumModuleDtoType;
(function (EnumModuleDtoType) {
    EnumModuleDtoType["CountArgs"] = "CountArgs";
    EnumModuleDtoType["CreateArgs"] = "CreateArgs";
    EnumModuleDtoType["CreateInput"] = "CreateInput";
    EnumModuleDtoType["CreateNestedManyInput"] = "CreateNestedManyInput";
    EnumModuleDtoType["Custom"] = "Custom";
    EnumModuleDtoType["CustomEnum"] = "CustomEnum";
    EnumModuleDtoType["DeleteArgs"] = "DeleteArgs";
    EnumModuleDtoType["Entity"] = "Entity";
    EnumModuleDtoType["Enum"] = "Enum";
    EnumModuleDtoType["FindManyArgs"] = "FindManyArgs";
    EnumModuleDtoType["FindOneArgs"] = "FindOneArgs";
    EnumModuleDtoType["ListRelationFilter"] = "ListRelationFilter";
    EnumModuleDtoType["OrderByInput"] = "OrderByInput";
    EnumModuleDtoType["UpdateArgs"] = "UpdateArgs";
    EnumModuleDtoType["UpdateInput"] = "UpdateInput";
    EnumModuleDtoType["UpdateNestedManyInput"] = "UpdateNestedManyInput";
    EnumModuleDtoType["WhereInput"] = "WhereInput";
    EnumModuleDtoType["WhereUniqueInput"] = "WhereUniqueInput";
})(EnumModuleDtoType || (exports.EnumModuleDtoType = EnumModuleDtoType = {}));
var EnumPackageStatus;
(function (EnumPackageStatus) {
    EnumPackageStatus["Completed"] = "Completed";
    EnumPackageStatus["Failed"] = "Failed";
    EnumPackageStatus["Initial"] = "Initial";
})(EnumPackageStatus || (exports.EnumPackageStatus = EnumPackageStatus = {}));
var EnumPendingChangeAction;
(function (EnumPendingChangeAction) {
    EnumPendingChangeAction["Create"] = "Create";
    EnumPendingChangeAction["Delete"] = "Delete";
    EnumPendingChangeAction["Update"] = "Update";
})(EnumPendingChangeAction || (exports.EnumPendingChangeAction = EnumPendingChangeAction = {}));
var EnumPendingChangeOriginType;
(function (EnumPendingChangeOriginType) {
    EnumPendingChangeOriginType["Block"] = "Block";
    EnumPendingChangeOriginType["Entity"] = "Entity";
})(EnumPendingChangeOriginType || (exports.EnumPendingChangeOriginType = EnumPendingChangeOriginType = {}));
var EnumPreviewAccountType;
(function (EnumPreviewAccountType) {
    EnumPreviewAccountType["BreakingTheMonolith"] = "BreakingTheMonolith";
    EnumPreviewAccountType["None"] = "None";
    EnumPreviewAccountType["PreviewOnboarding"] = "PreviewOnboarding";
})(EnumPreviewAccountType || (exports.EnumPreviewAccountType = EnumPreviewAccountType = {}));
var EnumResourceType;
(function (EnumResourceType) {
    EnumResourceType["MessageBroker"] = "MessageBroker";
    EnumResourceType["PluginRepository"] = "PluginRepository";
    EnumResourceType["ProjectConfiguration"] = "ProjectConfiguration";
    EnumResourceType["Service"] = "Service";
})(EnumResourceType || (exports.EnumResourceType = EnumResourceType = {}));
var EnumSchemaNames;
(function (EnumSchemaNames) {
    EnumSchemaNames["Abby"] = "Abby";
    EnumSchemaNames["CalDotCom"] = "CalDotCom";
    EnumSchemaNames["Formbricks"] = "Formbricks";
    EnumSchemaNames["Papermark"] = "Papermark";
})(EnumSchemaNames || (exports.EnumSchemaNames = EnumSchemaNames = {}));
var EnumSubscriptionPlan;
(function (EnumSubscriptionPlan) {
    EnumSubscriptionPlan["Enterprise"] = "Enterprise";
    EnumSubscriptionPlan["Essential"] = "Essential";
    EnumSubscriptionPlan["Free"] = "Free";
    EnumSubscriptionPlan["PreviewBreakTheMonolith"] = "PreviewBreakTheMonolith";
    EnumSubscriptionPlan["Pro"] = "Pro";
})(EnumSubscriptionPlan || (exports.EnumSubscriptionPlan = EnumSubscriptionPlan = {}));
var EnumSubscriptionStatus;
(function (EnumSubscriptionStatus) {
    EnumSubscriptionStatus["Active"] = "Active";
    EnumSubscriptionStatus["Deleted"] = "Deleted";
    EnumSubscriptionStatus["PastDue"] = "PastDue";
    EnumSubscriptionStatus["Paused"] = "Paused";
    EnumSubscriptionStatus["Trailing"] = "Trailing";
})(EnumSubscriptionStatus || (exports.EnumSubscriptionStatus = EnumSubscriptionStatus = {}));
var EnumTimeGroup;
(function (EnumTimeGroup) {
    EnumTimeGroup["Day"] = "Day";
    EnumTimeGroup["Month"] = "Month";
    EnumTimeGroup["Week"] = "Week";
    EnumTimeGroup["Year"] = "Year";
})(EnumTimeGroup || (exports.EnumTimeGroup = EnumTimeGroup = {}));
var EnumUserActionStatus;
(function (EnumUserActionStatus) {
    EnumUserActionStatus["Completed"] = "Completed";
    EnumUserActionStatus["Failed"] = "Failed";
    EnumUserActionStatus["Invalid"] = "Invalid";
    EnumUserActionStatus["Running"] = "Running";
})(EnumUserActionStatus || (exports.EnumUserActionStatus = EnumUserActionStatus = {}));
var EnumUserActionType;
(function (EnumUserActionType) {
    EnumUserActionType["DbSchemaImport"] = "DBSchemaImport";
    EnumUserActionType["GptConversation"] = "GptConversation";
    EnumUserActionType["ProjectRedesign"] = "ProjectRedesign";
})(EnumUserActionType || (exports.EnumUserActionType = EnumUserActionType = {}));
var EnumWorkspaceMemberType;
(function (EnumWorkspaceMemberType) {
    EnumWorkspaceMemberType["Invitation"] = "Invitation";
    EnumWorkspaceMemberType["User"] = "User";
})(EnumWorkspaceMemberType || (exports.EnumWorkspaceMemberType = EnumWorkspaceMemberType = {}));
var QueryMode;
(function (QueryMode) {
    QueryMode["Default"] = "Default";
    QueryMode["Insensitive"] = "Insensitive";
})(QueryMode || (exports.QueryMode = QueryMode = {}));
var Role;
(function (Role) {
    Role["Admin"] = "Admin";
    Role["OrganizationAdmin"] = "OrganizationAdmin";
    Role["ProjectAdmin"] = "ProjectAdmin";
    Role["User"] = "User";
})(Role || (exports.Role = Role = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["Asc"] = "Asc";
    SortOrder["Desc"] = "Desc";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
//# sourceMappingURL=models.js.map