"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventNames = void 0;
var EventNames;
(function (EventNames) {
    EventNames["CreateEntityController"] = "CreateEntityController";
    EventNames["CreateEntityControllerBase"] = "CreateEntityControllerBase";
    EventNames["CreateEntityGrpcController"] = "CreateEntityGrpcController";
    EventNames["CreateEntityGrpcControllerBase"] = "CreateEntityGrpcControllerBase";
    EventNames["CreateEntityControllerSpec"] = "CreateEntityControllerSpec";
    EventNames["CreateServerAuth"] = "CreateServerAuth";
    EventNames["CreateAdminAppModule"] = "CreateAdminAppModule";
    EventNames["CreateAdminDotEnv"] = "CreateAdminDotEnv";
    EventNames["CreateAdminUI"] = "CreateAdminUI";
    EventNames["CreateServer"] = "CreateServer";
    EventNames["CreateServerAppModule"] = "CreateServerAppModule";
    EventNames["CreateMainFile"] = "CreateMainFile";
    EventNames["CreateServerDotEnv"] = "CreateServerDotEnv";
    EventNames["CreateServerGitIgnore"] = "CreateServerGitIgnore";
    EventNames["CreateAdminGitIgnore"] = "CreateAdminGitIgnore";
    EventNames["CreateMessageBroker"] = "CreateMessageBroker";
    EventNames["CreateMessageBrokerTopicsEnum"] = "CreateMessageBrokerTopicsEnum";
    EventNames["CreateMessageBrokerNestJSModule"] = "CreateMessageBrokerNestJSModule";
    EventNames["CreateMessageBrokerClientOptionsFactory"] = "CreateMessageBrokerClientOptionsFactory";
    EventNames["CreateMessageBrokerService"] = "CreateMessageBrokerService";
    EventNames["CreateMessageBrokerServiceBase"] = "CreateMessageBrokerServiceBase";
    EventNames["CreateEntityService"] = "CreateEntityService";
    EventNames["CreateEntityServiceBase"] = "CreateEntityServiceBase";
    EventNames["CreateServerDockerCompose"] = "CreateServerDockerCompose";
    EventNames["CreateServerDockerComposeDB"] = "CreateServerDockerComposeDB";
    EventNames["CreateServerDockerComposeDev"] = "CreateServerDockerComposeDev";
    EventNames["CreatePrismaSchema"] = "CreatePrismaSchema";
    EventNames["CreateServerPackageJson"] = "CreateServerPackageJson";
    EventNames["CreateAdminUIPackageJson"] = "CreateAdminUIPackageJson";
    EventNames["CreateEntityModule"] = "CreateEntityModule";
    EventNames["CreateEntityModuleBase"] = "CreateEntityModuleBase";
    EventNames["CreateEntityResolver"] = "CreateEntityResolver";
    EventNames["CreateEntityResolverBase"] = "CreateEntityResolverBase";
    EventNames["CreateSwagger"] = "CreateSwagger";
    EventNames["CreateSeed"] = "CreateSeed";
    EventNames["CreateEntityControllerToManyRelationMethods"] = "CreateEntityControllerToManyRelationMethods";
    EventNames["CreateEntityGrpcControllerToManyRelationMethods"] = "createEntityGrpcControllerToManyRelationMethods";
    EventNames["CreateEntityResolverToManyRelationMethods"] = "CreateEntityResolverToManyRelationMethods";
    EventNames["CreateEntityResolverToOneRelationMethods"] = "CreateEntityResolverToOneRelationMethods";
    EventNames["CreateDTOs"] = "CreateDTOs";
    EventNames["LoadStaticFiles"] = "LoadStaticFiles";
    EventNames["CreateConnectMicroservices"] = "CreateConnectMicroservices";
    /**
     * Event that will allow plugins to add secrets references to the SecretsKeyNames enum
     */
    EventNames["CreateServerSecretsManager"] = "CreateServerSecretsManager";
})(EventNames || (exports.EventNames = EventNames = {}));
//# sourceMappingURL=plugins.types.js.map